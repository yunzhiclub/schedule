name: Ng Test and Build
env:
  NODE_VERSION: '14.15.4'
  PROJECT_NAME: 'schedule'
  JAVA_VERSION: '8.0.312+7'                  # set this to the Java version to use
  DISTRIBUTION: adopt                  # set this to the Java distribution
  
on: [pull_request]

jobs:
#   angular:
#     runs-on: ubuntu-22.04

#     steps:
#     - name: Cancel Previous Runs
#       uses: styfle/cancel-workflow-action@0.11.0
#       with:
#         access_token: ${{ github.token }}
        
#     - name: checkout
#       uses: actions/checkout@v3
    
#     - name: Setup Node.js environment
#       uses: actions/setup-node@v3.5.1
#       with: 
#         node-version: ${{ env.NODE_VERSION }}
#         cache: npm
#         cache-dependency-path: schedule/package.json
    
    
        
#     - name: print env 
#       run: printenv
      
#     - name: npm install
#       run: |
#         cd ${{ env.PROJECT_NAME }}
#         npm install --no-optional  --no-package-lock
#         node_modules/@angular/cli/bin/ng --version
        
#     - name: ng lint
#       run: |
#         cd ${{ env.PROJECT_NAME }} 
#         node_modules/@angular/cli/bin/ng lint
      
#     - name: ng test
#       run: cd ${{ env.PROJECT_NAME }} && node_modules/@angular/cli/bin/ng test --watch=false --browsers=ChromeHeadless --sourceMap=false    
      
#     - name: ng build
#       run: cd ${{ env.PROJECT_NAME }} && node_modules/@angular/cli/bin/ng build --prod

  springBoot:
    runs-on: ubuntu-22.04
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.7.0
      with:
        access_token: ${{ github.token }}
        
    - name: checkout
      uses: actions/checkout@v3
      
    - name: Setup MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        host port: 3310 # Optional, default value is 3306. The port of host
        container port: 3306 # Optional, default value is 3306. The port of container
        character set server: utf8mb4
        collation server: utf8mb4_unicode_ci
        mysql version: 5.7
        mysql database: schedule
        mysql user: root
        mysql password: root
      
#     - name: build mysql
#       run: |
#           docker pull mysql:5.7
#           docker run -p 3310:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=schedule -d mysql:5.7 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3.0.0
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.DISTRIBUTION }}
        cache: 'maven'
        
    - name: print env
      run: printenv
      
    - name: cat $GITHUB_EVENT_PATH
      run: cat $GITHUB_EVENT_PATH
      
    - name: Build with Maven
      run: cd api && mvn install
    

#   dingding-error: 
#     runs-on: ubuntu-latest
#     needs: [springBoot]
#     if: ${{ failure() }}
#     steps:
#       - name: Send dingding notify error
#         uses: zcong1993/actions-ding@master
#         with:
#           dingToken: b67048d462809d36c23a6a87332a9ab59dc8a3ffbd2c63e69caa218d7484f90d
#           secret: SEC7f500c8f3bc47f8cc1330761aceb3c1fa45cde14e90cbb2ddcfaa1e11d499e68
#           body: |
#             {
#               "msgtype": "text",
#               "text": {
#                   "content": '[打叉][打叉][打叉]  执行失败\n提交者: ${{ github.triggering_actor }}\n任务: ${{ github.event.pull_request.title }}\n${{ github.ref_type }}: ${{ github.head_ref }}\n${{ github.event_name }}: ${{ github.server_url }}/${{ github.repository }}/pull/${{ github.event.number }}'
#               }
#             }
      
#   dingding-success: 
#     runs-on: ubuntu-latest
#     needs: [springBoot]
#     if: ${{ success() }}
#     steps:
#       - name: Send dingding notify success
#         uses: zcong1993/actions-ding@master
#         with:
#           dingToken: b67048d462809d36c23a6a87332a9ab59dc8a3ffbd2c63e69caa218d7484f90d
#           secret: SEC7f500c8f3bc47f8cc1330761aceb3c1fa45cde14e90cbb2ddcfaa1e11d499e68
#           body: |
#             {
#               "msgtype": "text",
#               "text": {
#                   "content": '[微笑][微笑][微笑] 前台未测试 执行成功\n提交者: ${{ github.triggering_actor }}\n任务: ${{ github.event.pull_request.title }}\n${{ github.ref_type }}: ${{ github.head_ref }}\n${{ github.event_name }}: ${{ github.server_url }}/${{ github.repository }}/pull/${{ github.event.number }}'
#               }
#             } 
